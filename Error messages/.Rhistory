# Object not found error
a <- c(1, 4, 6, 2, 6)
a + b
my.fn(5)
my.fn <- function(x){
x + 3
}
myfn(5)
# Class mismatch error
b <- c("Anna", "Jenny", "Molly", "Kelsey")
a + b
# Punctuation errors
head(a))
plot(1:10, 1:10, type = 1:10)
?plots
?plot
plot(1:10, 1:10, pch = 1:10)
plot(1:10, 1:10 pch = 1:10)
c <- NULL
for(i in 1:length(a){
on_failure(my.fn) <- function(call, env) {
paste0("The value of x is ", deparse(call$x),
"The value of y is ", deparse(call$y))
}
out <- my.fn(2, 5)
my.fn <- function(x, y){
assert_that(is.numeric(x))
assert_that(is.numeric(y))
x + y
}
on_failure(my.fn) <- function(call, env) {
paste0("The value of x is ", deparse(call$x),
"The value of y is ", deparse(call$y))
}
# This doesn't work yet, but we'll try to fix it.
out <- my.fn(2, 5)
out2 <- my.fn(2, "b")
# assertthat
# https://github.com/hadley/assertthat
library(assertthat)
x <- "RGroup"
my.fn <- function(x, y){
assert_that(is.numeric(x))
assert_that(is.numeric(y))
x + y
}
on_failure(my.fn) <- function(call, env) {
paste0("The value of x is ", deparse(call$x),
"The value of y is ", deparse(call$y))
}
# This doesn't work yet, but we'll try to fix it.
out <- my.fn(2, 5)
out2 <- my.fn(2, "b")
out <- my.fn(2, 5)
out
out2 <- my.fn(2, "b")
